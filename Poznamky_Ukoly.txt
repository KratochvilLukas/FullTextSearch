Kapitola Fulltextové vyhledávání
	= Možná udělat jednoduchý testík, který ověří rychlost vyhledávání stránku po stráce a za použití vyhledávače.

Kapitola 3.
	= Zkusit implementovat alespoň nějaké algoritmy a porovnat rychlosti při jednom, více dokumentech. Malá velikost, Velká velikost. Atd.

Pozn. Kapitola Optimalizace vyhledávací fáze
	= Byla vytknuta chyba, kde jsem k fulltextu pristupoval pouze jako k tem slozitejsim, kterz maji invertovany index, probiha predpriprava i kdyz to bylo v danou chvili nezadouci. V tyhle fazi uz ale mluvime pouze o Vyhledavacich, ktere pouzivaji Fragmentacni algoritmus, jak bylo receno v drivejsich kapitolach, takze je podle me v poradku, ze k tomu tak pristupuju. 

	= Doplnit odkaz na nějaký obrázek, kde složitá query nad velkým počtem dat probehme behem nekolika ms

Kapitola Technologie Fulltextového vyhledávání
	= Je tam zmínka což mnohé testy dokazují. -> Odkázat se někam.

Kapitola Technologie nad apache Lucene
	= Jak je videt na obrázku. Doplnit číslo obrázku.
	= je v tabulce. Doplnit odkaz na tabulku.
	= 130 bilionu řádků kódu. Kde jsem se to dočet? Doplnit odkaz

Kapitola Ukládání dat
	= Obrázky Tradiční relační databáze a Elastic Indexu

Kapitola typ
	= Obrázek pro představu jednotlivých typů v indexu

Dopsat kapitolu správa paměti? 
	= Pravidelný úklid smazaných dokumentů, jak casto defaultne bezi, lze modifikovat, lze uklid sam vyvolat. Mam k tomu i priklady tak treba ukazat.

Kapitola Rozšíření
	= Doplnit číslo obrázku, kde je dokázáno, že je elastic na špici mezi vyhledávačema v používatelnosti,

Kapitola implementace
	= Doplnit obrázek, který demonstruje dobrou časovou a paměťovou optimalizaci. Obrázek by mohl porovnat např. velikost textových dokumentů s textem a jejich zaindexovanou podobu (jakou bude mít index velikost). No a časovou optimalizaci. Kdyz poslu request jak dlouho trva ney se vykona

Kapitola Uvod do zakladniho nastaveni
	= Cisla obrazkz. Obrazek zakladni nastaveni Mongo, Elastic

Kapitola optimalizace
	= Doplnit cislo tabulky

Kapitola Popisek stránky
	= Doplnit odkaz na tabulku.
	= Doplnit čísla obrázků.

Kapitola Boost hodnota
	= Kazda dalsi query bere vysledky z predchozi query. Optimalizace, ktera mozna neni az tak podstatna, ale neni potreba stale pouzivat stejnou query, ale lze pouzit matchall
	= Doplnit čísla obrázků
	= Vytvorit tabulku, kde budou různé případy užití function score field value factoru. Různé modifikátory, atd. 

Kapitola Optimalizace vyhledávacího dotazu
	= Doplnit tabulku, která znázorňuje jednotlivé optimalizační metody, které jsou použity v aplikaci. 


Pridat do resersni casti kapitolu optimalizace.
Definovat styl pro zdrojaky

Zaindexovat aplikaci, vytvorit sadu dotazu (mozna nechat vygenerovat?). Vyzkouset vsechny ruzny kategorie a typy dotazu. Kategorie: presne, presna cast textu, nepresny text, diry mezi slovama, uplne spatne, hodne zavadejici.
hlavni 2 kategorie: 
Presna fraze, nepresna fraze (prehazene slova), chybi treba slovo ve vete, fraze s preklepy, fraze se synonymy, ruzny pocet synonym, tvaroslovi,  + hodne obecne a hodne specificka a specialni slova - mozna podkategorie kazde kategorie.

- Popis zpusobu reseni: Optimalizace predpoklada, ze cim vyse je vysledek, tak tim spis je uzivatelem nalezen. -> zkusit to odnekud odkazat nebo pouzit jako predpoklad a tim zpusobem se vyhnu prace s lidma. Tim padem my optimalizujeme poradi to, aby pozadovany vysledek byl nahore ve vysledkove sade.


